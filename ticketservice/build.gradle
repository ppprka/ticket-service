buildscript {
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
    }
}


plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id 'org.graalvm.buildtools.native' version '0.9.4'
}

group = 'ru.innowise.danko'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
}



ext {
    set('springCloudVersion', "Hoxton.SR8")
}


apply plugin: "io.spring.dependency-management"

dependencies {
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-web

    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.1'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:2.6.1'
    runtimeOnly 'org.postgresql:postgresql:42.3.1'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.6.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.1'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-actuator
    implementation 'org.springframework.boot:spring-boot-actuator:2.6.1'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux

//  !!!!!!!!!!  testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
    // https://mvnrepository.com/artifact/org.liquibase/liquibase-core
    implementation 'org.liquibase:liquibase-core:4.6.1'
    // https://mvnrepository.com/artifact/org.testcontainers/postgresql
    testImplementation 'org.testcontainers:postgresql:1.16.2'
    // https://mvnrepository.com/artifact/org.testcontainers/junit-jupiter
    testImplementation 'org.testcontainers:junit-jupiter:1.16.2'
    // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
    testImplementation 'org.mockito:mockito-junit-jupiter:4.1.0'
    // https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito2
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    // https://mvnrepository.com/artifact/org.testcontainers/testcontainers
    testImplementation 'org.testcontainers:testcontainers:1.16.2'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin
    implementation "org.mapstruct:mapstruct:1.5.0.Beta1"
    testImplementation "org.testng:testng:6.10", "org.easytesting:fest-assert:1.4"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.0.Beta1"
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-openfeign-core
}


ext{
    set('springCloudVersion','Hoxton.SR4')
}

dependencyManagement{
    dependencies{
        'org.springframework.cloud:spring-cloud-dependencies:2020.0.4'
    }
}

dependencies {


    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}
test {
    useJUnitPlatform()
}

bootBuildImage {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}
